//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using NHibernate.Bytecode;
using NUnit.Framework;
using Environment=NHibernate.Cfg.Environment;

namespace NHibernate.Test.NHSpecificTest.NH496
{
	using System.Threading.Tasks;
	using System.Threading;
	[TestFixture]
	public class FixtureAsync : BugTestCase
	{
		public override string BugNumber
		{
			get { return "NH496"; }
		}

		[Test]
		public async Task CRUDAsync()
		{
			if (Environment.BytecodeProvider is NullBytecodeProvider)
			{
				Assert.Ignore("This test only runs with a non-null bytecode provider");
			}
			WronglyMappedClass obj = new WronglyMappedClass();
			obj.SomeInt = 10;

			using (ISession s = OpenSession())
			using (ITransaction t = s.BeginTransaction())
			{
				await (s.SaveAsync(obj, CancellationToken.None));
				await (t.CommitAsync(CancellationToken.None));
			}

			try
			{
				using (ISession s = OpenSession())
				using (ITransaction t = s.BeginTransaction())
				{
					Assert.ThrowsAsync<PropertyAccessException>(() => s.GetAsync(typeof(WronglyMappedClass), obj.Id, CancellationToken.None));
					await (t.CommitAsync(CancellationToken.None));
				}
			}
			finally
			{
				using (ISession s = OpenSession())
				using (ITransaction t = s.BeginTransaction())
				{
					await (s.DeleteAsync(obj, CancellationToken.None));
					await (t.CommitAsync(CancellationToken.None));
				}
			}
		}
	}
}