//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH662
{
	using System.Threading.Tasks;
	using System.Threading;
	[TestFixture, Ignore("Not supported.")]
	public class FixtureAsync: BugTestCase
	{
		[Test]
		public async Task UseDerivedClassAsync()
		{
			object savedId;
			var d = new Derived {Description = "something"};

			using (ISession s = OpenSession())
			using (var tx = s.BeginTransaction())
			{
				savedId = await (s.SaveAsync(d, CancellationToken.None));
				await (tx.CommitAsync(CancellationToken.None));
			}

			using (ISession s = OpenSession())
			using (var tx = s.BeginTransaction())
			{
				d = await (s.LoadAsync<Derived>(savedId, CancellationToken.None));
				Assert.That(d.Description, Is.EqualTo("something"));
				await (tx.CommitAsync(CancellationToken.None));
			}

			using (ISession s = OpenSession())
			using (var tx = s.BeginTransaction())
			{
				await (s.DeleteAsync(d, CancellationToken.None));
				await (tx.CommitAsync(CancellationToken.None));
			}
		}
	}
}