//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH3570
{
	using System.Threading.Tasks;
	using System.Threading;
	[TestFixture]
	public class BiFixtureAsync : BugTestCase
	{
		private Guid id;

		[Test]
		[KnownBug("NH-3570")]
		public async Task ShouldNotSaveRemoveChildAsync()
		{
			var parent = new BiParent();
			parent.AddChild(new BiChild());
			using (var s = OpenSession())
			{
				using (var tx = s.BeginTransaction())
				{
					id = (Guid)await (s.SaveAsync(parent, CancellationToken.None));
					parent.Children.Clear();
					parent.AddChild(new BiChild());
					await (tx.CommitAsync(CancellationToken.None));
				}
			}
			using (var s = OpenSession())
			{
				using (s.BeginTransaction())
				{
					Assert.That((await (s.GetAsync<BiParent>(id, CancellationToken.None))).Children.Count, Is.EqualTo(1));
					Assert.That((await (s.CreateCriteria<BiChild>().ListAsync(CancellationToken.None))).Count, Is.EqualTo(1));
				}
			}
		}

		protected override void OnTearDown()
		{
			using (var s = OpenSession())
			{
				using (var tx = s.BeginTransaction())
				{
					s.CreateQuery("delete from BiChild").ExecuteUpdate();
					s.CreateQuery("delete from BiParent").ExecuteUpdate();
					tx.Commit();
				}
			}
		}
	}
}