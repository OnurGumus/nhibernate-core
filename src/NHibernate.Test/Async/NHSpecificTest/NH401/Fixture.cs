//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH401
{
	using System.Threading.Tasks;
	using System.Threading;
	[TestFixture]
	public class FixtureAsync : BugTestCase
	{
		public override string BugNumber
		{
			get { return "NH401"; }
		}

		[Test]
		public async Task MergeAsync()
		{
			object clubId;

			using (ISession s = OpenSession())
			{
				Club club1 = new Club();
				clubId = await (s.SaveAsync(club1, CancellationToken.None));
				await (s.FlushAsync(CancellationToken.None));
			}

			Clubmember mem = new Clubmember();

			ISession sess2 = OpenSession();
			mem.Club = (Club) await (sess2.GetAsync(typeof(Club), clubId, CancellationToken.None));
			sess2.Close();

			ISession sess = OpenSession();
			mem.Expirydate = DateTime.Now.AddYears(1);
			mem.Joindate = DateTime.Now;

			sess.Merge(mem);
			await (sess.FlushAsync(CancellationToken.None));

			sess.Close();

			using (ISession s = OpenSession())
			{
				await (s.DeleteAsync("from System.Object", CancellationToken.None));
				await (s.FlushAsync(CancellationToken.None));
			}
		}
	}
}