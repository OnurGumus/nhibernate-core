//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Linq;
using NUnit.Framework;
using NHibernate.Linq;

namespace NHibernate.Test.Linq
{
	using System.Threading.Tasks;
	using System.Threading;
	[TestFixture]
	public class CasingTestAsync : LinqTestCase
	{
		[Test]
		public async Task ToUpperAsync()
		{
			var name = await ((from e in db.Employees
						where e.EmployeeId == 1
						select e.FirstName.ToUpper()).SingleAsync(CancellationToken.None));

			Assert.That(name, Is.EqualTo("NANCY"));
		}

		[Test]
		public async Task ToUpperInvariantAsync()
		{
			var name = await ((from e in db.Employees
						where e.EmployeeId == 1
						select e.FirstName.ToUpperInvariant()).SingleAsync(CancellationToken.None));

			Assert.That(name, Is.EqualTo("NANCY"));
		}

		[Test]
		public async Task ToLowerAsync()
		{
			var name = await ((from e in db.Employees
						where e.EmployeeId == 1
						select e.FirstName.ToLower()).SingleAsync(CancellationToken.None));

			Assert.That(name, Is.EqualTo("nancy"));
		}

		[Test]
		public async Task ToLowerInvariantAsync()
		{
			var name = await ((from e in db.Employees
						where e.EmployeeId == 1
						select e.FirstName.ToLowerInvariant()).SingleAsync(CancellationToken.None));

			Assert.That(name, Is.EqualTo("nancy"));
		}
	}
}
