//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;

namespace NHibernate.Driver
{
	using System.Threading.Tasks;
	/// <summary>
	/// NHibernate driver for the System.Data.SQLite data provider for .NET 2.0.
	/// </summary>
	/// <remarks>
	/// <p>
	/// In order to use this driver you must have the System.Data.SQLite.dll assembly available
	/// for NHibernate to load. This assembly includes the SQLite.dll or SQLite3.dll libraries.
	/// </p>    
	/// <p>
	/// You can get the System.Data.SQLite.dll assembly from http://sourceforge.net/projects/sqlite-dotnet2.
	/// </p>
	/// <p>
	/// Please check <a href="http://www.sqlite.org/">http://www.sqlite.org/</a> for more information regarding SQLite.
	/// </p>
	/// </remarks>
	public partial class SQLite20Driver : ReflectionBasedDriver
	{

        private static async Task Connection_StateChangeAsync(object sender, StateChangeEventArgs e)
        {
            if ((e.OriginalState == ConnectionState.Broken || e.OriginalState == ConnectionState.Closed || e.OriginalState == ConnectionState.Connecting) &&
                e.CurrentState == ConnectionState.Open)
            {
                var connection = (DbConnection)sender;
                using (var command = connection.CreateCommand())
                {
                    // Activated foreign keys if supported by SQLite.  Unknown pragmas are ignored.
                    command.CommandText = "PRAGMA foreign_keys = ON";
                    await (command.ExecuteNonQueryAsync()).ConfigureAwait(false);
                }
            }
        }
	}
}