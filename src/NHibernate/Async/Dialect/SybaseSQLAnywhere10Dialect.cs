//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using NHibernate.Dialect.Function;
using NHibernate.Dialect.Schema;
using NHibernate.SqlCommand;
using Environment = NHibernate.Cfg.Environment;

namespace NHibernate.Dialect
{
	using System.Threading.Tasks;
	using System.Threading;
	/// <content>
	/// Contains generated async methods
	/// </content>
	public partial class SybaseSQLAnywhere10Dialect : Dialect
	{

		#region IDENTITY or AUTOINCREMENT support

		#endregion
		#region LIMIT/OFFSET support

		#endregion
		#region Lock acquisition support

		#endregion
		#region Temporary table support

		#endregion
		#region Callable statement support

		public override async Task<DbDataReader> GetResultSetAsync(DbCommand statement, CancellationToken cancellationToken)
		{
			cancellationToken.ThrowIfCancellationRequested();
			var rdr = await (statement.ExecuteReaderAsync(cancellationToken)).ConfigureAwait(false);
			return rdr;
		}

		#endregion
	}
}